# Travis CI configuration file

language: c

sudo: false

git:
  # Set to 10 instead of 1 to avoid problems when the most recent commits have [skip ci]
  depth: 10

# Install needed packages on Ubuntu & OS X
addons:
  apt:
    # This is ignored on bionic for some reason (see below).
    packages:
      - autopoint
      - libpopt-dev
  homebrew:
    packages:
      - popt
    # The default OS X image is now (July 2019) too old to work without this
    update: true

env:
  # More configurations are configured in the matrix section
  matrix:
    - CONFIG=normal
    - CONFIG=c90
    - CONFIG=stackprotect
    - CONFIG=disable-nls
  global:
    - MAKEFLAGS='-j 2'

compiler:
  - clang
  - gcc

os:
  - linux
  - osx

matrix:
  include:
  - env: CONFIG=normal DIST=bionic
    os: linux
    dist: bionic
    compiler: gcc
  - env: CONFIG=normal DIST=bionic
    os: linux
    dist: bionic
    compiler: clang
  - env: CONFIG=normal DIST=focal
    os: linux
    dist: focal
    compiler: gcc
  - env: CONFIG=normal DIST=focal
    os: linux
    dist: focal
    compiler: clang
  - env: CONFIG=clang6 DIST=xenial
    os: linux
    dist: xenial
    compiler: clang
    addons:
      apt:
        packages:
          - autopoint
          - clang-6.0
          - libpopt-dev
  - env: CONFIG=clang8 DIST=xenial
    os: linux
    dist: xenial
    compiler: clang
    addons:
      apt:
        sources:
          sourceline:
            - deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-8 main
          key_url:
            - https://apt.llvm.org/llvm-snapshot.gpg.key
        packages:
          - autopoint
          - clang-8
          - libpopt-dev
  - env: CONFIG=clang9 DIST=xenial
    os: linux
    dist: xenial
    compiler: clang
    addons:
      apt:
        sources:
          sourceline:
            - deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-9 main
          key_url:
            - https://apt.llvm.org/llvm-snapshot.gpg.key
        packages:
          - autopoint
          - clang-9
          - libpopt-dev
  - env: CONFIG=clang10 DIST=xenial
    os: linux
    dist: xenial
    compiler: clang
    addons:
      apt:
        sources:
          sourceline:
            - deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-10 main
          key_url:
            - https://apt.llvm.org/llvm-snapshot.gpg.key
        packages:
          - autopoint
          - clang-10
          - libpopt-dev
  - env: CONFIG=gcc8 DIST=xenial
    os: linux
    dist: xenial
    compiler: gcc
    addons:
      apt:
        sources:
          sourceline:
            - ppa:ubuntu-toolchain-r/test
        packages:
          - autopoint
          - g++-8
          - libpopt-dev
  - env: CONFIG=gcc9 DIST=xenial
    os: linux
    dist: xenial
    compiler: gcc
    addons:
      apt:
        sources:
          sourceline:
            - ppa:ubuntu-toolchain-r/test
        packages:
          - autopoint
          - g++-9
          - libpopt-dev
  - env: CONFIG=arm-cross
    os: linux
    compiler: gcc
    addons:
      apt:
        packages:
          - autopoint
          - gcc-4.8-arm-linux-gnueabihf
          - libc6-dev-armhf-cross
    cache:
      directories:
        - $HOME/popt
  - env: CONFIG=musl DIST=xenial
    os: linux
    dist: xenial
    compiler: gcc
    addons:
      apt:
        packages:
          - autopoint
          - musl-tools
    cache:
      directories:
        - $HOME/popt
  - env: CONFIG=sanitize DIST=xenial
    os: linux
    dist: xenial
    compiler: clang
    addons:
      apt:
        sources:
          sourceline:
            - deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-10 main
          key_url:
            - https://apt.llvm.org/llvm-snapshot.gpg.key
        packages:
          - autopoint
          - clang-10
          - libtool
    cache:
      directories:
        - $HOME/popt
    # Required for -fsanitize=undefined
    # see https://github.com/travis-ci/travis-ci/issues/9033
    sudo: required
  - env: CONFIG=coverage DIST=xenial
    os: linux
    dist: xenial
    compiler: gcc
    addons:
      apt:
        packages:
          - autopoint
          - libpopt-dev
          - subversion
  - env: CONFIG=normal
    os: osx
    osx_image: xcode11
    compiler: clang
    addons:
      homebrew:
        packages:
          - popt
  - env: CONFIG=normal DIST=bionic
    arch: arm64
    os: linux
    dist: bionic
    compiler: gcc
  - env: CONFIG=normal DIST=bionic
    arch: ppc64le
    os: linux
    dist: bionic
    compiler: gcc

before_install:
  # The apt addons section is ignored on bionic for some reason
  - if [ "${DIST}" = "bionic" ] ; then sudo apt-get install -y autopoint gettext libpopt-dev libtool pkg-config; fi

install:
  # Install the latest libexif
  - |
    # This is done by the testsuite in coverage builds
    if [ "$CONFIG" != "coverage" ] ; then
      # OS X has a weird alias that causes cd to abort with set -e so leave it
      # off over a cd.
      cd "$HOME"
      set -e
      git clone --depth=1 https://github.com/libexif/libexif.git
      set +e
      cd libexif
      set -e
      PATH="$PATH:/usr/local/opt/gettext/bin" autoreconf -sivf
      set +e
      cd "$TRAVIS_BUILD_DIR"
    fi
  # Install the exif test suite on coverage builds
  - |
    if [ "$CONFIG" = "coverage" ] ; then
      set -e
      pip install --user cpp-coveralls
      cd "$HOME"
      git clone --depth=1 https://github.com/libexif/libexif-testsuite.git
      cd libexif-testsuite
      mkdir src
      # Use Travis' copy of the exif source
      ln -s "$TRAVIS_BUILD_DIR" src/exif
      # This downloads the libexif source
      ./build-config.sh
      autoreconf -sivf
      set +e
    fi
  # Install a fixed libpopt in sanitize builds, plus in those environments
  # where it's not available at all.
  - |
    if [ '(' "$CONFIG" = "musl" -o "$CONFIG" = "arm-cross" -o "$CONFIG" = "sanitize" ')' -a ! -e "$HOME/popt/lib/libpopt.a" ] ; then
      set -e
      cd "$HOME"
      POPT_BASE_URL="http://us-central1.gce.archive.ubuntu.com/ubuntu/pool/main/p/popt/popt_1.18"
      curl --fail --retry 8 -OL "${POPT_BASE_URL}"-2build2.debian.tar.xz -OL "${POPT_BASE_URL}".orig.tar.gz -OL "${POPT_BASE_URL}"-2build2.dsc
      dpkg-source -x popt_1.16-12.dsc
      cd popt-1.18
      # Drop the message catalogs so they aren't built, installed or cached
      sed -i -e 's/\(AM_GNU_GETTEXT_VERSION\)/dnl \1/' configure.ac
      autoreconf -sivf
      cd "$TRAVIS_BUILD_DIR"
      set +e
    fi

script:
  # Ensure brew gettext is in the PATH so autopoint is found on OS X
  - PATH="$PATH:/usr/local/opt/gettext/bin" autoreconf -sivf
  - if [ "$CONFIG" = "normal" ] ; then CFLAGS='-Wall -Wextra -O3'; fi
  # Most environments work with _XOPEN_SOURCE=500 but OS X requires 600 to get
  # snprintf and strdup.
  - if [ "$CONFIG" = "c90" ] ; then CFLAGS='-std=iso9899:1990 -D_XOPEN_SOURCE=600 -Wall -Wextra -O3'; fi
  - if [ "$CONFIG" = "stackprotect" ] ; then CFLAGS='-g -O0 -fstack-protector-all'; fi
  - if [ "$CONFIG" = "disable-nls" ] ; then CFLAGS='-Wall -Wextra -O3'; CONFIGURE_OPTS='--disable-nls'; fi
  - if [ "$CONFIG" = "clang6" ] ; then CFLAGS='-Wall -Wextra -O3'; export CC=clang-6.0; fi
  - if [ "$CONFIG" = "clang8" ] ; then CFLAGS='-Wall -Wextra -Wno-error=switch -O3'; MAKE_OPTS="CFLAGS+=-Werror CFLAGS+=${CFLAGS// / CFLAGS+=}"; export CC=clang-8; fi
  - if [ "$CONFIG" = "clang9" ] ; then CFLAGS='-Wall -Wextra -Wno-error=switch -O3'; MAKE_OPTS="CFLAGS+=-Werror CFLAGS+=${CFLAGS// / CFLAGS+=}"; export CC=clang-9; fi
  - if [ "$CONFIG" = "clang10" ] ; then CFLAGS='-Wall -Wextra -Wno-error=switch -O3'; MAKE_OPTS="CFLAGS+=-Werror CFLAGS+=${CFLAGS// / CFLAGS+=}"; export CC=clang-10; fi
  - if [ "$CONFIG" = "gcc8" ] ; then CFLAGS='-Wall -Wextra -Wno-error=switch -Wno-error=implicit-fallthrough -Wno-error=enum-compare -O3'; MAKE_OPTS="CFLAGS+=-Werror CFLAGS+=${CFLAGS// / CFLAGS+=}"; export export CC=gcc-8; fi
  - if [ "$CONFIG" = "gcc9" ] ; then CFLAGS='-Wall -Wextra -Wno-error=switch -Wno-error=implicit-fallthrough -Wno-error=enum-compare -O3'; MAKE_OPTS="CFLAGS+=-Werror CFLAGS+=${CFLAGS// / CFLAGS+=}"; export export CC=gcc-9; fi
  - if [ "$CONFIG" = "arm-cross" ] ; then CFLAGS='-Wall -Wextra -O3'; export CC=arm-linux-gnueabihf-gcc-4.8; CONFIGURE_OPTS="--host=arm-linux-gnueabihf" PKG_CONFIG_PATH="${HOME}/popt/lib/pkgconfig"; fi
  - if [ "$CONFIG" = "musl" ] ; then CFLAGS='-Wall -Wextra -O3'; export CC=musl-gcc; PKG_CONFIG_PATH="${HOME}/popt/lib/pkgconfig"; fi
  - if [ "$CONFIG" = "sanitize" ] ; then CFLAGS='-g -Wall -Wextra -fsanitize=address -fsanitize=undefined -fsanitize-address-use-after-scope'; export CC=clang-10; PKG_CONFIG_PATH="${HOME}/popt/lib/pkgconfig"; export ASAN_OPTIONS=strict_string_checks=0:detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1:detect_leaks=1; fi
  - if [ "$CONFIG" = "coverage" ] ; then CFLAGS=--coverage; CONFIGURE_OPTS='LDFLAGS=--coverage'; fi

  # libpopt0:1.16-8ubuntu1 has a memory leak that causes UBSAN to fail. Build a
  # fixed version to use when running those tests. popt is also needed on ARM
  # and MUSL since those types of packages aren't available to install with
  # apt. This can't be built in the install section because it needs the
  # compiler name and flags to be specified.
  - |
    if [ -e "$HOME"/popt-1.16 ] ; then
      set -e
      cd "$HOME"/popt-1.16
      # Use the CONFIGURE_OPTS above to get a --host option, if present
      ./configure --prefix="${HOME}/popt" --disable-nls --disable-shared --disable-dependency-tracking $CONFIGURE_OPTS
      make V=1
      make V=1 install
      cd "$TRAVIS_BUILD_DIR"
      set +e
    fi
  - |
    if [ "$CONFIG" != "coverage" ] ; then
      cd "$HOME"/libexif
      set -e
      # Use the CONFIGURE_OPTS above to get a --host option, if present
      # Use CFLAGS to get the -g and -fsanitize options
      ./configure --prefix="${HOME}" --disable-dependency-tracking CFLAGS="$CFLAGS" $CONFIGURE_OPTS
      make V=1
      make V=1 install
      set +e
      cd "$TRAVIS_BUILD_DIR"
    fi

  # Finally, configure and build exif
  - if [ "$CONFIG" = "coverage" ] ; then cd "$HOME"/libexif-testsuite; fi
  - ./configure --prefix="${HOME}" --disable-dependency-tracking CFLAGS="$CFLAGS" PKG_CONFIG_PATH="${PKG_CONFIG_PATH}:${HOME}/lib/pkgconfig" $CONFIGURE_OPTS || { tail -300 config.log; false; }
  - make V=1 $MAKE_OPTS

  # Skip tests when cross compiling.
  - if [ "$CONFIG" != "arm-cross" ] ; then make V=1 $MAKE_OPTS check || { tail -300 test*/test-suite.log; false; }; fi
  - make V=1 $MAKE_OPTS install
  - if [ "$CONFIG" = "coverage" ] ; then cd "$TRAVIS_BUILD_DIR"; fi

after_success:
  - if [ "$CONFIG" = "coverage" ] ; then coveralls --exclude test --gcov-options '\-lp'; fi
